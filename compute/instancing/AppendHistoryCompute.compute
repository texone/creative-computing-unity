// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel WriteHistory

struct Voxel{
    float3 position;
    //float4 color;
};

AppendStructuredBuffer<Voxel> voxelBuffer;

Texture2D<float4> inTex;
int index;

[numthreads(1,1,1)]
void WriteHistory (uint3 id : SV_DispatchThreadID)
{
    

    float thresh = 0.25;
    
    float4 c11 = inTex[id.xy];
    float4 c01 = inTex[id.xy + uint2(-1,0)];
    float4 c21 = inTex[id.xy + uint2( 1,0)];
    float4 c10 = inTex[id.xy + uint2( 0,-1)];
    float4 c12 = inTex[id.xy + uint2( 0, 1)];
    
    if(c01.r < thresh && c21.r < thresh && c10.r < thresh && c12.r < thresh)return;
    
    if(c11.r < thresh){
        Voxel v;
        v.position = float3(id.x, index, id.y);
        //v.color = float4(1,0,0,1);//c;
        voxelBuffer.Append(v);
    }
}
